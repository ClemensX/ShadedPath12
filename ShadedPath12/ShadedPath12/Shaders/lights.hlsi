#include "lights_basic.hlsi"

ConstantBuffer<CBVLights> cbvLights: register(b1);


// ambient color is maximum of all ambient color values * material.ambient
float3 calcAmbient() {
	float3 ambient = float3(0,0,0);
	[unroll] for (int i = 0; i < MAX_AMBIENT; i++) {
		ambient.x = max(ambient.x, cbvLights.ambient[i].ambient.x);
		ambient.y = max(ambient.x, cbvLights.ambient[i].ambient.y);
		ambient.z = max(ambient.x, cbvLights.ambient[i].ambient.z);
	}
	return ambient * cbvLights.material.ambient;
}

float3 applyLighting(float3 col) {
	float3 ambient = calcAmbient();
	col = col * ambient;
	return col;
	//return saturate(col);
	//return float4(1, 1, 1, 0);
}

